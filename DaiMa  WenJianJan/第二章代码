public class LianXi001 {
    public static void main(String[] args) {
      //用四个变量描述商品1
       String m1Name = "茉莉花茶包 20 包";
       String m1Id = "000099518";
       int m1Count = 1000;
       double m1Price = 99.9;
       //再用四个变量描述商品2
       String m2Name = "可口可乐 330ml";
       String m2Id = "000099519";
       int m2Count = 1000;
       double m2Price = 3.0;
         //卖出一个商品1
       int m1ToSold = 1;
        System.out.println("感谢购买"+m1ToSold+"个"+m1Name+"。商品单价为"+m1Price+"。消费总价为"+m1Price*m1ToSold+"。");
        m1Count-=m1ToSold;
        System.out.println(m1Id+"剩余的库存数量为"+m1Count);
          // TODO 卖出三个商品2
        int m2ToSold = 3;
        System.out.println("感谢购买"+m2ToSold+"个"+m2Name+"。商品单价为"+m2Price+"。消费总价为"+m2Price*m2ToSold+"。");
        m2Count -= m2ToSold;
        System.out.println(m2Id+"剩余的库存数量为"+m2Count);

    }
}


public class LianXi001 {
    public static void main(String[] args) {
        Merchandise m1;
        m1 = new Merchandise();
        Merchandise m2 = new Merchandise();
        Merchandise m3 = new Merchandise();
        Merchandise m4 = new Merchandise();
        Merchandise m5 = new Merchandise();
        m1 = m5;
        System.out.println("m1=" + m1);
        System.out.println("m2=" + m2);
        System.out.println("m3=" + m3);
        System.out.println("m4=" + m4);
        System.out.println("m5=" + m5);

        Merchandise m6 = m1;
        System.out.println("m6=" + m6);
        m6 = m5;
        System.out.println("m6=" + m6);

        System.out.println("m1=" + m1);
        System.out.println("m2=" + m2);
        System.out.println("m3=" + m3);
        System.out.println("m4=" + m4);
        System.out.println("m5=" + m5);

        int a = 999;

    }
}


public class LianXi001 {
    public static void main(String[] args) {
       Merchandise [] merchandises = new Merchandise[9];
       merchandises [0] =new Merchandise();
       merchandises [1] = new Merchandise();
       merchandises [0].name ="联想笔记本 拯救者Y9000P2022";
        System.out.println(merchandises[0].name);
        System.out.println(merchandises[2]);

    }
}






public class CPU {
    double speed;
    String producer;
}

public class Mainboard {
    CPU cpu;
    Memory memory;
    //主板
    Storage storage;
    String model;
    //上市年份
    int year;
}

public class Memory {
    long capacity;
    String producer;
}

public class Phone {
     Screen screen;
     Mainboard mainboard;
     double price;
     boolean hasFigurePrintUnlocker;
}

public class Screen {
    double size;
    String producer;
}

public class Storage {
    long capacity;
    String producer;
}


public class PhoneMaker {
    public static void main(String[] args) {
        //创建一个Phone的实例
        Phone phone =new Phone();
        //可以设置断点查看实例内部状态
        phone.hasFigurePrintUnlocker = true;
        phone.price=2999.9;
        //创建一个Screen的实例，给phone实例的screen引用赋值
        phone .screen = new Screen();
        //通过引用phone找到Phone的对象，通过screen找到Screen 通过.producer给之赋值
        phone.screen.producer = "京东方";
        phone.screen.size = 6.6;

         Mainboard mainboard = new Mainboard();

         mainboard.model = "EA888";
         mainboard.year = 2019;
         mainboard.cpu = new CPU();
         mainboard.cpu.producer = "德州仪器";
         mainboard.cpu.speed = 3.5;
         mainboard.memory = new Memory();
         mainboard.memory.producer = "三星";
         mainboard.memory.capacity = 4;
         mainboard.storage = new Storage();
         mainboard.storage.producer = "Intel";
         mainboard.storage.capacity = 256;
          //想想我们创建了几个对象，有创建了几个引用？


    }
}






package person;

public class Customer {
    public String name;
    public double money;
    public boolean isDrivingCar;
}




package supermaket;

public class LittleSuperMarket {
    public String superMarketName;
    public String address;
    public int parkingCount;
    public double incomingSum;
    public Merchandise[]merchandises;
    public int[] merchandiseSold;
}




package supermaket;

public class Merchandise {
    public String name;
    public String id;
    public  int count;
    public double soldPrice;
    public double  purchasePrice;
}





import person.Customer;
import supermaket.LittleSuperMarket;
import supermaket.Merchandise;

import java.util.Scanner;

public class RunLittleSupperMarketAppMain {
    public static void main(String[] args) {
        LittleSuperMarket littleSuperMarket = new LittleSuperMarket();
        littleSuperMarket.address = "世纪大道666号";
        littleSuperMarket.superMarketName = "魅友超市";
        littleSuperMarket.parkingCount = 200;
        littleSuperMarket.merchandises = new Merchandise[200];
        littleSuperMarket.merchandiseSold = new int[littleSuperMarket.merchandises.length];

        Merchandise[] all = littleSuperMarket.merchandises;

        for (int i = 0; i < all.length; i++) {
            Merchandise m = new Merchandise();
            m.count = 200;
            m.id = "ID" + i;
            m.name = "商品" + i;
            m.purchasePrice = Math.random() * 200;
            m.soldPrice = (1 + Math.random()) * 200;
            all[i] = m;
        }
        System.out.println("超市开门啦！");

        boolean open = true;
        Scanner scanner = new Scanner(System.in);
        while (open) {
            System.out.println("本店叫做" + littleSuperMarket.superMarketName);
            System.out.println("本店地址" + littleSuperMarket.address);
            System.out.println("共有停车位" + littleSuperMarket.parkingCount + "个");
            System.out.println("今天的营业额为" + littleSuperMarket.incomingSum);
            System.out.println("共有商品" + littleSuperMarket.merchandises.length + "种");

            Customer customer = new Customer();
            customer.name = "顾客编号"+((int)(Math.random()*10000));
            customer.money = (1+Math.random())*1000;
            customer.isDrivingCar = Math.random() >0.5;

            if (customer.isDrivingCar){
                if (littleSuperMarket.parkingCount>0){
                    littleSuperMarket.parkingCount--;
                    System.out.println("欢迎"+customer.name+"驾车而来。本店已经为您安排了车位，停车免费哦。车位编号为"+littleSuperMarket.parkingCount);
                }else {
                    System.out.println("不好意思，本店车位已满。欢迎您下次光临");
                    continue;
                }
            }else {
                System.out.println("欢迎"+customer.name+"光临本店");
            }
            double totalCost = 0;
            while (true){
                System.out.println("本店提供"+all.length+"种商品，欢迎选购。请输入商品编号");
                int index = scanner.nextInt();
                 if (index < 0){
                     break;
                 }
                 if (index>= all.length){
                     System.out.println("本店没有这种商品，请叙述编号在0到"+(all.length -1)+"之间的商品编号。");
                     continue;
                 }
                Merchandise m = all[index];

                System.out.println("您选购的商品名字"+m.name+"。单价是"+m.soldPrice+"。请问你要购买多少个？");
               int numToBuy = scanner.nextInt();
               if (numToBuy<=0){
                   System.out.println("不买看看也好，欢迎继续挑选。");
                   continue;
               }
                if (numToBuy > m.count){
                    System.out.println("本店此商品库存没有这么多，欢迎继续选购。");
                    continue;
                }
               if (numToBuy * m.purchasePrice > customer.money){
                   System.out.println("您带的钱不够，欢迎继续挑选");
                   continue;
               }

                totalCost += numToBuy*m.soldPrice;
                m.count -= numToBuy;
                littleSuperMarket.merchandiseSold[index] += numToBuy;

            }
            customer.money -= totalCost;

            if (customer.isDrivingCar){
                littleSuperMarket.parkingCount++;
            }
            System.out.println("顾客"+customer.name+"共消费了"+totalCost);
            littleSuperMarket.incomingSum += totalCost;
            System.out.println("还继续营业吗？");
            open = scanner.nextBoolean();
        }
        System.out.println("超市关门了！");
        System.out.println("今天总的营业额为"+littleSuperMarket.incomingSum+"。营业情况如下");
         for (int i= 0;i<littleSuperMarket.merchandiseSold.length;i++ ){
             Merchandise m =all[i];
             int numSold = littleSuperMarket.merchandiseSold[i];
             if (numSold>0 ){
                 double incomming = m.soldPrice * numSold;
                 double netIncomming = (m.soldPrice - m.purchasePrice) * numSold;
                 System.out.println(m.name + "售出了"+numSold+"个。销售额为"+incomming+"。净利润为"+netIncomming);
             }
         }

    }
}



package com.bao;

public class Merchandise {
    public String name;
    public String id;
    public int count;
    public double soldPrice;
    public double purchasePrice;

    public void describe( )  {
        System.out.println("商品的名字叫做"+name+"，id是"+id+"。商品售价是"+soldPrice+".商品进价是"+purchasePrice+"。商品库存量是"+count+"。销售一个毛利润是"+(soldPrice-purchasePrice));
    }
}

package com.bao;

public class MerchandiseDescAppMain {
    public static void main(String[] args) {
        Merchandise merchandise = new Merchandise();

        merchandise.name = "书桌";
        merchandise.soldPrice =999.9;
        merchandise.purchasePrice=500;
        merchandise.count=40;
        merchandise.id="DESK9527";

        merchandise.describe();

    }
}

package com.geekbang.supermarket;

public class MerchandiseV2 {
   public String name;
   public String id;
   public int count;
   public double soldPrice;
   public double purchasePrice;

   public void describe (){
       System.out.println("商品的名字叫做"+name+",id是"+id+",商品售价是"+soldPrice+",商品的进价是"+purchasePrice+".商品的库存量是"+count+",销售一个的毛利润是"+(soldPrice-purchasePrice));
   }
   public double calculateProfilt (){
       double profit = soldPrice - purchasePrice;
       if (profit <= 0){
           return 0;
       }
       return profit;
   }
   public double getCurrentCount (){
       return count;
   }
   public int getIntSoldPrise(){
       return (int) soldPrice;
   }
}
package com.geekbang.supermarket;

public class MerchandiseV2DescAppMain {
    public static void main(String[] args) {
        MerchandiseV2 merchandise = new MerchandiseV2();

        merchandise.name = "书桌";
        merchandise.soldPrice = 999.9;
        merchandise.purchasePrice = 500;
        merchandise.count = 40;
        merchandise.id = "DESK9527";

        merchandise.describe();

    }
}


import supermaket.LittleSuperMarket;
import supermaket.Merchandise;

import java.util.Scanner;

public class RunLitteSupperMarketAppMainExample {
    public static void main(String[] args) {
        LittleSuperMarket littleSuperMarket = new LittleSuperMarket();
        littleSuperMarket.address = "世纪大道666号";
        littleSuperMarket.superMarketName = "魅友超市";
        littleSuperMarket.parkingCount = 200;
        littleSuperMarket.merchandises = new Merchandise[200];
        littleSuperMarket.merchandiseSold = new int[littleSuperMarket.merchandises.length];

        Merchandise[] all = littleSuperMarket.merchandises;

        for (int i = 0; i < all.length; i++) {
            Merchandise m = new Merchandise();
            m.count = 200;
            m.id = "ID" + i;
            m.name = "商品" + i;
            m.purchasePrice = Math.random() * 200;
            m.soldPrice = (1 + Math.random()) * 200;
            all[i] = m;
        }

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("今天超市大特惠，所有商品第二件半价！选择要购买的商品索引：");
            int index = scanner.nextInt();

            if (index < 0) {
                System.out.println("欢迎再次光临！");
                break;
            }
            if (index >= all.length) {
                System.out.println("商品索引超出界限");
                continue;
            }
            Merchandise m = all[index];
            System.out.println("商品" + m.name + "售价为" + m.soldPrice + "请问购买几个？");
            int numToBuy = scanner.nextInt();
             if (numToBuy > m.count){
                 System.out.println("库存不足");
                 continue;
             }
            int fullPriceCount = numToBuy / 2 +numToBuy % 2;
            int halfPriceCount = numToBuy - fullPriceCount;

            double totalCost = fullPriceCount * m.soldPrice+(halfPriceCount* m.soldPrice/2);
            m.count-=numToBuy;

            System.out.println("选购的商品的总价为"+totalCost);
        }

    }
}
